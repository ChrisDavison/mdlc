!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
LINK Two	test/test.md	/^[One](https:\/\/www.one.com) and [Two](https:\/\/www.two.com)$/;"	r
Link	src/main.rs	/^    impl Link {$/;"	i
Link	src/main.rs	/^    pub struct Link {$/;"	T
LinkType	src/main.rs	/^    pub enum LinkType {$/;"	T
Opts	src/main.rs	/^struct Opts {$/;"	T
Result	src/main.rs	/^type Result<T> = std::result::Result<T, Box<dyn std::error::Error>>;$/;"	T
TODO	README.md	/^## TODO$/;"	r
from_file	src/main.rs	/^    pub fn from_file(filename: &PathBuf, linktype: Option<LinkType>) -> Vec<Link> {$/;"	f
get_md_files_in_curdir	src/main.rs	/^fn get_md_files_in_curdir() -> Result<Vec<PathBuf>> {$/;"	f
is_alive	src/main.rs	/^        pub fn is_alive(&self) -> bool {$/;"	f
is_local	src/main.rs	/^        pub fn is_local(&self) -> bool {$/;"	f
is_valid_local_link	src/main.rs	/^        fn is_valid_local_link(&self) -> bool {$/;"	f
is_valid_web_link	src/main.rs	/^        fn is_valid_web_link(&self) -> bool {$/;"	f
is_web	src/main.rs	/^        pub fn is_web(&self) -> bool {$/;"	f
links	src/main.rs	/^mod links {$/;"	M
main	src/main.rs	/^fn main() -> Result<()> {$/;"	f
mdlc - Markdown Link Checker	README.md	/^# mdlc - Markdown Link Checker$/;"	h
